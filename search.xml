<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>gulp配置</title>
      <link href="/2019/08/29/automation/gulp-config/"/>
      <url>/2019/08/29/automation/gulp-config/</url>
      
        <content type="html"><![CDATA[<h1 id="gulp配置"><a href="#gulp配置" class="headerlink" title="gulp配置"></a>gulp配置</h1><p>gulp前端工程构建工具，功能强大，配置简单灵活</p><p>我暂时只用到以下几方面</p><blockquote><ol><li>添加公共头部和尾部</li><li>css和js添加时间戳和版本号</li><li>css兼容前缀、压缩</li><li>js压缩混淆</li></ol></blockquote><p>项目地址: <a href="https://github.com/vandvassily/gulp-config" target="_blank" rel="noopener">gulp-config</a></p><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"># 安装所需的npm包</span><br><span class="line">npm install</span><br><span class="line"></span><br><span class="line"># 开发环境</span><br><span class="line">npm run dev</span><br><span class="line"></span><br><span class="line"># 生产环境，文件打包至dist文件夹</span><br><span class="line">npm run build</span><br><span class="line"></span><br><span class="line"># 如需压缩js</span><br><span class="line">npm run build:uglify</span><br><span class="line"></span><br><span class="line"># 清空dist文件夹</span><br><span class="line">npm run clean</span><br></pre></td></tr></table></figure><h2 id="项目结构"><a href="#项目结构" class="headerlink" title="项目结构"></a>项目结构</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">gulp-config                                    // 项目名称</span><br><span class="line">├─ .browserslistrc                             // css兼容配置</span><br><span class="line">├─ .gitignore                                  //</span><br><span class="line">├─ node_modules                                // npm包</span><br><span class="line">├─ dist                                        // 生产环境文件</span><br><span class="line">├─ gulpfile.js                                 // gulp配置文件</span><br><span class="line">├─ LICENSE                                     //</span><br><span class="line">├─ package-lock.json                           //</span><br><span class="line">├─ package.json                                // npm包版本管理</span><br><span class="line">├─ README.md                                   // 说明文档</span><br><span class="line">└─ src                                         //</span><br><span class="line">   ├─ assets                                   // 静态文件</span><br><span class="line">   │  ├─ css                                   // css</span><br><span class="line">   │  │  └─ common.css                         // 公共css</span><br><span class="line">   │  ├─ img                                   // 图片</span><br><span class="line">   │  ├─ js                                    // 公共js</span><br><span class="line">   │  └─ lib                                   // 第三方js库</span><br><span class="line">   ├─ include                                  // 公共头部，底部，和内容</span><br><span class="line">   │  ├─ com_body.html                         //</span><br><span class="line">   │  ├─ com_bottom.html                       //</span><br><span class="line">   │  └─ com_head.html                         //</span><br><span class="line">   └─ views                                    // 页面文件夹</span><br><span class="line">      └─ hello-world                           // 某个页面</span><br><span class="line">         ├─ css                                //</span><br><span class="line">         │  └─ index.css                       //</span><br><span class="line">         ├─ index.html                         //</span><br><span class="line">         └─ js                                 //</span><br><span class="line">            └─ index.js                        //</span><br></pre></td></tr></table></figure><h2 id="添加公共头部和尾部"><a href="#添加公共头部和尾部" class="headerlink" title="添加公共头部和尾部"></a>添加公共头部和尾部</h2><p>使用插件：<code>gulp-file-include</code><br><fancybox><img src="/2019/08/29/automation/gulp-config/gulp_include1.png" alt="avatar"></fancybox></p><p>模板文件放在<code>src/include</code>中，在需要套入模板的地方使用<code>@@include(&#39;@@webRoot/include/XXX.html&#39;)</code>即可</p><h2 id="css处理"><a href="#css处理" class="headerlink" title="css处理"></a>css处理</h2><p>css只做了浏览器兼容处理，并没有使用压缩功能，如要使用，可以使用<code>gulp-csso</code>进行处理</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * css添加浏览器兼容</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">css</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> plugins = [</span><br><span class="line">        autoprefixer()</span><br><span class="line">    ];</span><br><span class="line">    <span class="keyword">return</span> src(<span class="string">'src/**/*.css'</span>)</span><br><span class="line">        .pipe(postcss(plugins))</span><br><span class="line">        .pipe(dest(<span class="string">'dist/'</span>));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="js处理"><a href="#js处理" class="headerlink" title="js处理"></a>js处理</h2><p>开发环境和生产环境使用的不同方法，根据具体情况决定是否使用js混淆压缩</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 未做混淆压缩，开发使用</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">js</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> src(<span class="string">'src/**/*.js'</span>)</span><br><span class="line">        .pipe(dest(<span class="string">'dist/'</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 混淆压缩JS代码，如不需要请不要使用</span></span><br><span class="line"><span class="comment"> * 如果只需要压缩，不需要sourcemaps，去除掉sourcemaps选项即可</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">uglifyJs</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> src(<span class="string">'src/**/*.js'</span>, &#123; <span class="attr">sourcemaps</span>: <span class="literal">true</span> &#125;)</span><br><span class="line">        .pipe(uglify())</span><br><span class="line">        .pipe(dest(<span class="string">'dist/'</span>, &#123; <span class="attr">sourcemaps</span>: <span class="string">'.'</span> &#125;));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="图片处理"><a href="#图片处理" class="headerlink" title="图片处理"></a>图片处理</h2><p>现在未对图片做压缩处理</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">images</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> src(<span class="string">'src/**/*.&#123;png,jpg,gif&#125;'</span>)</span><br><span class="line">        .pipe(dest(<span class="string">'dist/'</span>));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如需要使用图片压缩，自己使用<code>gulp-imagemin</code>实现即可</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 文档地址: https://github.com/sindresorhus/gulp-imagemin</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装插件</span></span><br><span class="line">npm install --save-dev gulp-imagemin</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"># gulpfile.js</span><br><span class="line">...</span><br><span class="line"><span class="keyword">const</span> imagemin = <span class="built_in">require</span>(<span class="string">'gulp-imagemin'</span>);</span><br><span class="line">···</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">images</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> src(<span class="string">'src/**/*.&#123;png,jpg,gif&#125;'</span>)</span><br><span class="line">        .pipe(imagemin())</span><br><span class="line">        .pipe(dest(<span class="string">'dist/'</span>))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="html处理"><a href="#html处理" class="headerlink" title="html处理"></a>html处理</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getTimestamp</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> timestamp = <span class="keyword">new</span> <span class="built_in">Date</span>();</span><br><span class="line">    <span class="keyword">return</span> isDevelopment()</span><br><span class="line">        ? timestamp.getTime()</span><br><span class="line">        : dayjs().format(<span class="string">'YYYY-MM-DD-HH-mm-ss'</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * html页面添加公共头部和尾部，以及添加时间戳或版本戳</span></span><br><span class="line"><span class="comment"> * 开发环境为时间戳，生产环境为日期戳</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">html</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> src([<span class="string">'src/**/*.html'</span>])</span><br><span class="line">        .pipe(fileinclude(&#123;</span><br><span class="line">            prefix: <span class="string">'@@'</span>,</span><br><span class="line">            basepath: <span class="string">'@file'</span></span><br><span class="line">        &#125;))</span><br><span class="line">        .pipe(replace(<span class="string">'@version'</span>, <span class="string">'v='</span> + getTimestamp()))</span><br><span class="line">        .pipe(dest(<span class="string">'dist/'</span>));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 自动化工程 </category>
          
          <category> 构建工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 自动化工程 </tag>
            
            <tag> 构建 </tag>
            
            <tag> gulp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>travis自动构建和部署vuePress文档到Github Pages</title>
      <link href="/2019/08/16/automation/travis-ci/"/>
      <url>/2019/08/16/automation/travis-ci/</url>
      
        <content type="html"><![CDATA[<p>Github中每个仓库都可以设置Github pages。仓库会有一个特殊的分支，gh-pages，该分支会在特殊位置发布，具体的访问地址为username.github.io/my-repository-name,访问的页面为gh-pages中的index.html。</p><p>例如我的仓库，<a href="https://github.com/vandvassily/css-trick" target="_blank" rel="noopener">css-trick</a>，Github Pages的访问地址为 <a href="http://vandvassily.github.io/css-trick/" target="_blank" rel="noopener">http://vandvassily.github.io/css-trick/</a>,因为我配置了自己的域名 <a href="vandvassily.cn">vandvassily.cn</a>，所以浏览器地址栏的域名显示为<a href="http://vandvassily.cn/css-trick/">http://vandvassily.cn/css-trick/</a></p><h2 id="创建仓库"><a href="#创建仓库" class="headerlink" title="创建仓库"></a>创建仓库</h2><p>在Github中新建仓库，克隆仓库到本地开发环境</p><h2 id="初始化vuePress项目"><a href="#初始化vuePress项目" class="headerlink" title="初始化vuePress项目"></a>初始化vuePress项目</h2><p>参考<a href="https://vuepress.vuejs.org/zh/guide/" target="_blank" rel="noopener">vuePress官方文档</a>，需要注意的是在<code>docs/.vuepress/config.js</code>中设置正确的<code>base</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#docs/.vuepress/config.js</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">    base: <span class="string">'/css-trick/'</span>, <span class="comment">// 仓库名称</span></span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在<code>package.json</code>文件中添加两条脚本</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line">"scripts": &#123;</span><br><span class="line">    ...</span><br><span class="line">    "docs:dev": "vuepress dev docs",</span><br><span class="line">    "docs:build": "vuepress build docs"</span><br><span class="line">&#125;,</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>添加本地依赖<code>yarn add -D vuepress</code></p><h2 id="配置-travis-yml文件"><a href="#配置-travis-yml文件" class="headerlink" title="配置.travis.yml文件"></a>配置.travis.yml文件</h2><p>在项目的根目录下，新建<code>.travis.yml</code>文件，</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">language:</span> <span class="string">node_js</span></span><br><span class="line"><span class="attr">node_js:</span></span><br><span class="line"><span class="bullet">    -</span> <span class="number">10</span></span><br><span class="line"><span class="attr">cache:</span> <span class="string">yarn</span></span><br><span class="line"><span class="attr">install:</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">yarn</span></span><br><span class="line"><span class="attr">script:</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">yarn</span> <span class="attr">docs:build</span></span><br><span class="line"><span class="attr">after_success:</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">cd</span> <span class="string">docs/.vuepress/dist</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">git</span> <span class="string">init</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">git</span> <span class="string">config</span> <span class="bullet">--global</span> <span class="string">user.name</span> <span class="string">"$&#123;U_NAME&#125;"</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">git</span> <span class="string">config</span> <span class="bullet">--global</span> <span class="string">user.email</span> <span class="string">"$&#123;U_EMAIL&#125;"</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">git</span> <span class="string">add</span> <span class="bullet">-A</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">git</span> <span class="string">commit</span> <span class="bullet">-m</span> <span class="string">'deploy'</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">git</span> <span class="string">push</span> <span class="bullet">-f</span> <span class="string">"https://$&#123;access_token&#125;@$&#123;GH_REPO&#125;"</span> <span class="attr">master:$&#123;DEPLOY_BRANCH&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">branches:</span></span><br><span class="line"><span class="attr">  only:</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">master</span></span><br></pre></td></tr></table></figure><h2 id="获取Github-token"><a href="#获取Github-token" class="headerlink" title="获取Github token"></a>获取Github token</h2><p>Github中选择<code>Settings-Developer settings-Personal access tokens</code>，创建新的token，除了删除选项，其余都可以勾选上</p><h2 id="关联travis和github"><a href="#关联travis和github" class="headerlink" title="关联travis和github"></a>关联travis和github</h2><p>在<a href="https://travis-ci.org/" target="_blank" rel="noopener">travis-ci</a>中关联Github账号</p><h2 id="travis中项目环境配置"><a href="#travis中项目环境配置" class="headerlink" title="travis中项目环境配置"></a>travis中项目环境配置</h2><p>在<code>travis-ci</code>中，账户选择<code>Settings</code>，选择想要自动化的repo，点击<code>Settings</code>，在<code>Environment Variables</code>中，新增5个环境变量<code>access_token</code>(github token)、<code>U_NAME</code>(git用户名)、<code>U_EMAIL</code>(git邮箱)、<code>GH_REPO</code>(项目仓库地址)、<code>DEPLOY_BRANCH</code>(发布分支，value为gh-pages)</p><h2 id="本地推送代码，查看效果"><a href="#本地推送代码，查看效果" class="headerlink" title="本地推送代码，查看效果"></a>本地推送代码，查看效果</h2><p>本地push代码到github，travis在我们push完代码后，会自动执行<code>.travis.yml</code>中的指令</p><p><fancybox><img src="/2019/08/16/automation/travis-ci/travis2.png" alt="avatar"></fancybox></p>]]></content>
      
      
      <categories>
          
          <category> 自动化工程 </category>
          
          <category> 构建工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 自动化工程 </tag>
            
            <tag> 构建 </tag>
            
            <tag> travis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何选择前端框架</title>
      <link href="/2019/08/12/%E5%A6%82%E4%BD%95%E9%80%89%E6%8B%A9%E5%89%8D%E7%AB%AF%E6%A1%86%E6%9E%B6/"/>
      <url>/2019/08/12/%E5%A6%82%E4%BD%95%E9%80%89%E6%8B%A9%E5%89%8D%E7%AB%AF%E6%A1%86%E6%9E%B6/</url>
      
        <content type="html"><![CDATA[<h3 id="框架选择的原则"><a href="#框架选择的原则" class="headerlink" title="框架选择的原则"></a>框架选择的原则</h3><ul><li>兼容性</li><li>易用性和学习成本</li><li>生态系统</li></ul><h4 id="兼容性"><a href="#兼容性" class="headerlink" title="兼容性"></a>兼容性</h4><p>如果是公司项目，则需要根据公司的产品性质和目标用户决定，例如政府单位，使用的是IE6-8的浏览器，则需要考虑框架的兼容性；如果是移动端项目，则基本可以选择最新最流行的框架，例如Vue、React等</p><h4 id="易用性"><a href="#易用性" class="headerlink" title="易用性"></a>易用性</h4><p>框架易于上手和学习，方便新人进行开发和维护</p><h4 id="生态系统"><a href="#生态系统" class="headerlink" title="生态系统"></a>生态系统</h4><p>社区活跃，插件多，方便开发和提高开发速度，避免重复造轮子</p><hr><p>框架的选择，最新的不一定最好，要选择最适合自己的</p>]]></content>
      
      
      <categories>
          
          <category> Coding </category>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> javascript </tag>
            
            <tag> 框架 </tag>
            
            <tag> 随笔 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2019/07/24/hello-world/"/>
      <url>/2019/07/24/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
      <categories>
          
          <category> 2019 </category>
          
      </categories>
      
      
    </entry>
    
    
  
  
</search>
